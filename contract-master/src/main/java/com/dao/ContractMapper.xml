<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.ContractMapper">
  <resultMap id="BaseResultMap" type="com.pojo.Contract">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="change_status" jdbcType="INTEGER" property="changeStatus" />
    <result column="user_role_id" jdbcType="VARCHAR" property="userRoleId" />
    <result column="money" jdbcType="VARCHAR" property="money" />
    <result column="pay_state" jdbcType="INTEGER" property="payState" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, num, type_id, name, start_time, end_time, state, change_status, user_role_id, 
    money, pay_state, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.pojo.ContractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_contract
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_contract
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pojo.ContractExample">
    delete from t_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pojo.Contract">
    insert into t_contract (id, num, type_id, 
      name, start_time, end_time, 
      state, change_status, user_role_id, 
      money, pay_state, is_delete
      )
    values (#{id,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{changeStatus,jdbcType=INTEGER}, #{userRoleId,jdbcType=VARCHAR}, 
      #{money,jdbcType=VARCHAR}, #{payState,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Contract">
    insert into t_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="changeStatus != null">
        change_status,
      </if>
      <if test="userRoleId != null">
        user_role_id,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="payState != null">
        pay_state,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="changeStatus != null">
        #{changeStatus,jdbcType=INTEGER},
      </if>
      <if test="userRoleId != null">
        #{userRoleId,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=VARCHAR},
      </if>
      <if test="payState != null">
        #{payState,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pojo.ContractExample" resultType="java.lang.Long">
    select count(*) from t_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

    <select id="getContractAdd" resultType="com.vo.ContractAdd">
      SELECT DATE_FORMAT(STR_TO_DATE(t.start_time, '%m/%d/%Y %h:%i %p'), '%Y-%m-%d') as `day`,
      count(1) as `count`
      from t_contract t
      where DATE_FORMAT(STR_TO_DATE(t.start_time, '%m/%d/%Y %h:%i %p'), '%Y-%m-%d') >= #{start}
      AND DATE_FORMAT(STR_TO_DATE(t.start_time, '%m/%d/%Y %h:%i %p'), '%Y-%m-%d') &lt;= #{end}
      GROUP BY DATE_FORMAT(STR_TO_DATE(t.start_time, '%m/%d/%Y %h:%i %p'), '%Y-%m-%d')
      ORDER BY DATE_FORMAT(STR_TO_DATE(t.start_time, '%m/%d/%Y %h:%i %p'), '%Y-%m-%d') asc;
    </select>

    <update id="updateByExampleSelective" parameterType="map">
    update t_contract
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.changeStatus != null">
        change_status = #{record.changeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userRoleId != null">
        user_role_id = #{record.userRoleId,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=VARCHAR},
      </if>
      <if test="record.payState != null">
        pay_state = #{record.payState,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_contract
    set id = #{record.id,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      change_status = #{record.changeStatus,jdbcType=INTEGER},
      user_role_id = #{record.userRoleId,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=VARCHAR},
      pay_state = #{record.payState,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Contract">
    update t_contract
    <set>
      <if test="num != null">
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="changeStatus != null">
        change_status = #{changeStatus,jdbcType=INTEGER},
      </if>
      <if test="userRoleId != null">
        user_role_id = #{userRoleId,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=VARCHAR},
      </if>
      <if test="payState != null">
        pay_state = #{payState,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Contract">
    update t_contract
    set num = #{num,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      change_status = #{changeStatus,jdbcType=INTEGER},
      user_role_id = #{userRoleId,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR},
      pay_state = #{payState,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>